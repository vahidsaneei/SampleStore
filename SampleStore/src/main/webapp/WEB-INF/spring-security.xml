<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url access="permitAll" pattern="/" />
		<intercept-url access="permitAll" pattern="/sellers/**" />
		<intercept-url pattern="/products/**"
			access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/store/**"
			access="isAuthenticated()" />
		<intercept-url pattern="/users/**"
			access="hasAnyRole('ROLE_ADMIN','ROLE_DBA')" />
		<intercept-url pattern="/orders/**"
			access="hasAnyRole('ROLE_ADMIN','ROLE_DBA','ROLE_SALE_MANAGER')" />
		<intercept-url pattern="/stores/**"
			access="hasAnyRole('ROLE_ADMIN','ROLE_DBA','ROLE_SALE_MANAGER')" />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<csrf disabled="true" />
		<!-- config login page and url -->
		<form-login login-page="/login" default-target-url="/"
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/login?error"
			username-parameter="username" password-parameter="password" />

		<!-- config logout page and urls -->
		<logout logout-success-url="/" logout-url="/logout"
			invalidate-session="true" delete-cookies="JSESSIONID" />
		<csrf />
	</http>

	<!-- set password encoder to endod and retrived password -->
	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- set default userdetailsService to extract user details from database -->
	<authentication-manager>
		<authentication-provider
			user-service-ref="storeUserDetailsService">
			<password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>